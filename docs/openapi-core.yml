openapi: 3.1.0
info:
  title: Java API Exercise - Core Criteria
  description: Core API for the Requests and Responses Exercise
  version: 0.2.3
  contact:
    name: Responses and Requests Exercise

servers:
  - url: http://localhost:4000
tags:
  - name: students
  - name: languages
paths:
  /students:
    post:
      tags:
        - students
      operationId: createStudent
      summary: Create a new student
      description: Add a new student to the list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudent'
      responses:
        '201':
          description: Student created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
    get:
      tags:
        - students
      summary: Get all students
      description: Get all students from the list
      operationId: getStudents
      responses:
        '200':
          description: Get all students
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllStudents'
  /students/{firstName}:
    get:
      parameters:
        - name: firstName
          in: path
          description: First name of the student
          required: true
          schema:
            type: string
      tags:
        - students
      summary: Get a student
      description: Get a single student by their first name
      operationId: getSpecificStudent
      responses:
        '200':
          description: Get a single student
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
    put:
      tags:
        - students
      summary: Update a student
      description: Update a student's details using the firstName provided. Just update the first student found in the list with the provided first name.
      operationId: updateStudent
      parameters:
        - name: firstName
          in: path
          description: The first name of the student to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudent'
      responses:
        '201':
          description: Student successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
    delete:
      tags:
        - students
      summary: Delete a student
      description: Remove a student from the list and send that student back to the client
      operationId: deleteStudent
      parameters:
        - name: firstName
          in: path
          description: The first name of the student to update
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted student
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'

  /languages:
    post:
      tags:
        - languages
      summary: Create a language
      description: Add a new language to the list
      operationId: createLanguage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLanguage'
      responses:
        '201':
          description: Language created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
    get:
      tags:
        - languages
      summary: Get all languages
      description: Get all languages from the list
      operationId: getLanguages
      responses:
        '200':
          description: Get all languages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllLanguages'
  /languages/{name}:
    get:
      parameters:
        - name: name
          in: path
          description: Name of language
          required: true
          schema:
            type: string
      tags:
        - languages
      summary: Get a language
      description: Get a single language by name
      operationId: getSpecificLanguage
      responses:
        '200':
          description: Get one language from the list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
    put:
      tags:
        - languages
      summary: Update a language
      description: Update a language's name. Just update the first language found in the list with the provided name.
      operationId: updateLanguage
      parameters:
        - name: name
          in: path
          description: The name of the language to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLanguage'
      responses:
        '201':
          description: Successfully updated language
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
    delete:
      tags:
        - languages
      summary: Delete a language
      description: Remove a language from the list and send that language back to the client
      operationId: deleteLanguage
      parameters:
        - name: name
          in: path
          description: The name of the language to update
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted language
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'

components:
  schemas:
    CreateStudent:
      type: object
      required: [firstName, lastName]
      properties:
        firstName:
          type: string
          example: "Nathan"
        lastName:
          type: string
          example: "King"
    Student:
      type: object
      properties:
        firstName:
          type: string
          example: "Nathan"
        lastName:
          type: string
          example: "King"
    AllStudents:
      type: array
      items:
        $ref: '#/components/schemas/Student'

    CreateLanguage:
      type: object
      required: [ name ]
      properties:
        name:
          type: string
          example: "Java"
    Language:
      type: object
      properties:
        name:
          type: string
          example: "Java"
    AllLanguages:
      type: array
      items:
        $ref: '#/components/schemas/Language'
